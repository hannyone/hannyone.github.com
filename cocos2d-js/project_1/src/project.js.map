{"version":3,"sources":["resources/app.asar/node_modules/browser-pack/_prelude.js","Script/Main.js","project.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","Main","module","cc","_RFpush","Class","extends","Component","properties","blockEdgeLength","fieldMapLRMargin","fieldMapTBMargin","blockTypeCount","fieldMapRow","fieldMapColumn","fieldMapText","default","type","Object","fieldMapImage","Node","Background","ArrowR","ArrowL","ArrowD","ArrowRU","ArrowLU","CurrentBlock","Block","Prefab","BlockT","BlockI","BlockO","BlockL","BlockRL","BlockS","BlockRS","onLoad","thisCanvas","this","push","j","instantiate","setPosition","p","on","EventType","TOUCH_START","event","moveRight","moveLeft","pullDownBlock","rotation","getBlockStartPosition","currentblockNum","getBlockNum","Math","floor","random","createBlockText","drawBlocks","console","log","parent","director","getScene","start","schedule","blockDownCallback","dt","isBlocked","checkedBlockCount","_RFpop"],"mappings":"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","file":"project.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\ncc._RFpush(module, 'c3e3fhd2P9Al6wWyp5tYOhi', 'Main');\n// Script\\Main.js\n\n\"use strict\";\n\ncc.Class({\n\textends: cc.Component,\n\n\tproperties: {\n\t\tblockEdgeLength: 60,\n\t\tfieldMapLRMargin: 20,\n\t\tfieldMapTBMargin: 30,\n\t\tblockTypeCount: 7,\n\t\tfieldMapRow: 15,\n\t\tfieldMapColumn: 10,\n\n\t\tfieldMapText: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Object\n\t\t},\n\t\tfieldMapImage: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tBackground: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tArrowR: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowL: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowD: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowRU: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowLU: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tCurrentBlock: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tBlock: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockT: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockI: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockO: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockL: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockRL: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockS: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockRS: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t}\n\t},\n\n\t// use this for initialization\n\tonLoad: function onLoad() {\n\t\tvar thisCanvas = this;\n\n\t\t//테두리 처리를 위해 실제보다 2줄씩 더 크게 배열 생성함\n\t\t//실제 게임이 진행되는 공간은 [1~15][1~10] 이 됨\n\t\tthis.fieldMapText = [];\n\t\tthis.fieldMapImage = [];\n\t\tfor (var i = 0; i < this.fieldMapRow + 2; i++) {\n\t\t\tthis.fieldMapText.push([]);\n\t\t\tthis.fieldMapImage.push([]);\n\t\t\tfor (var j = 0; j < this.fieldMapColumn + 2; j++) {\n\t\t\t\tif (i === 0 || i === this.fieldMapRow + 1) {\n\t\t\t\t\t//제일 윗줄과 제일 아랫줄\n\t\t\t\t\tthis.fieldMapText[i].push(9);\n\t\t\t\t} else if (j === 0 || j === this.fieldMapColumn + 1) {\n\t\t\t\t\t//제일 왼쪽줄과 제일 오른쪽줄\n\t\t\t\t\tthis.fieldMapText[i].push(9);\n\t\t\t\t} else {\n\t\t\t\t\tthis.fieldMapText[i].push(0);\n\t\t\t\t}\n\n\t\t\t\tthis.fieldMapImage.push();\n\t\t\t\tif (i > 0 && i < this.fieldMapRow + 1) {\n\t\t\t\t\tif (j > 0 && j < this.fieldMapColumn + 1) {\n\t\t\t\t\t\tthis.fieldMapImage[i][j] = cc.instantiate(this.Block);\n\t\t\t\t\t\t//this.fieldMapImage[i][j].parent = cc.director.getScene();\n\t\t\t\t\t\t//cc.director.getScene().addChild(this.fieldMapImage);\n\t\t\t\t\t\tthis.fieldMapImage[i][j].setPosition(cc.p((j - 1) * this.blockEdgeLength + this.fieldMapLRMargin, (i - 1) * this.blockEdgeLength + this.fieldMapTBMargin));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.ArrowR.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.moveRight();\n\t\t});\n\t\tthis.ArrowL.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.moveLeft();\n\t\t});\n\t\tthis.ArrowD.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.pullDownBlock();\n\t\t});\n\t\tthis.ArrowRU.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.CurrentBlock.rotation += 90;\n\t\t});\n\t\tthis.ArrowLU.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.CurrentBlock.rotation -= 90;\n\t\t});\n\t},\n\n\tgetBlockStartPosition: function getBlockStartPosition() {\n\t\tif (this.currentblockNum === 1) {\n\t\t\treturn cc.p(this.fieldMapLRMargin + this.blockEdgeLength * (this.fieldMapColumn / 2), this.blockEdgeLength * this.fieldMapRow - this.fieldMapTBMargin);\n\t\t} else {\n\t\t\treturn cc.p(this.fieldMapLRMargin + this.blockEdgeLength * (this.fieldMapColumn / 2), this.blockEdgeLength * (this.fieldMapRow - 1) - this.fieldMapTBMargin);\n\t\t}\n\t},\n\n\tgetBlockNum: function getBlockNum() {\n\t\t//http://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n\t\t//var blockNum = Math.floor(Math.random() * (max - min +1)) + min;\n\t\treturn Math.floor(Math.random() * this.blockTypeCount);\n\t},\n\n\t/*\n createBlock: function() {\n \tvar blockNum = this.getBlockNum();\n \tswitch(blockNum) {\n \t\tcase 0:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockT);\t\t\t\t\t\t\t\t\n \t\t\tbreak;\n \t\tcase 1:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockI);\n \t\t\tbreak;\n \t\tcase 2:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockO);\n \t\t\tbreak;\n \t\tcase 3:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockL);\n \t\t\tbreak;\n \t\tcase 4:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockRL);\n \t\t\tbreak;\n \t\tcase 5:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockS);\n \t\t\tbreak;\n \t\tcase 6:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockRS);\n \t\t\tbreak;\n \t}\n \tthis.CurrentBlock.parent = cc.director.getScene();\n \tthis.CurrentBlock.setPosition(this.getBlockStartPosition(blockNum));\n },\n */\n\n\tcreateBlockText: function createBlockText() {\n\t\tthis.currentblockNum = this.getBlockNum();\n\t\tswitch (this.currentblockNum) {\n\t\t\tcase 0:\n\t\t\t\tthis.fieldMapText[15][5] = 1;\n\t\t\t\tthis.fieldMapText[14][4] = 1;\n\t\t\t\tthis.fieldMapText[14][5] = 1;\n\t\t\t\tthis.fieldMapText[14][6] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.fieldMapText[15][3] = 1;\n\t\t\t\tthis.fieldMapText[15][4] = 1;\n\t\t\t\tthis.fieldMapText[15][5] = 1;\n\t\t\t\tthis.fieldMapText[15][6] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.fieldMapText[15][5] = 1;\n\t\t\t\tthis.fieldMapText[15][6] = 1;\n\t\t\t\tthis.fieldMapText[14][5] = 1;\n\t\t\t\tthis.fieldMapText[14][6] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.fieldMapText[15][6] = 1;\n\t\t\t\tthis.fieldMapText[14][4] = 1;\n\t\t\t\tthis.fieldMapText[14][5] = 1;\n\t\t\t\tthis.fieldMapText[14][6] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.fieldMapText[15][4] = 1;\n\t\t\t\tthis.fieldMapText[14][4] = 1;\n\t\t\t\tthis.fieldMapText[14][5] = 1;\n\t\t\t\tthis.fieldMapText[14][6] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tthis.fieldMapText[15][5] = 1;\n\t\t\t\tthis.fieldMapText[15][6] = 1;\n\t\t\t\tthis.fieldMapText[14][4] = 1;\n\t\t\t\tthis.fieldMapText[14][5] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tthis.fieldMapText[15][4] = 1;\n\t\t\t\tthis.fieldMapText[15][5] = 1;\n\t\t\t\tthis.fieldMapText[14][5] = 1;\n\t\t\t\tthis.fieldMapText[14][6] = 1;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.drawBlocks();\n\t\tconsole.log(this.fieldMapText);\n\t},\n\n\tdrawBlocks: function drawBlocks() {\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] > 0) {\n\t\t\t\t\tthis.fieldMapImage[i][j].parent = cc.director.getScene();\n\t\t\t\t} else {\n\t\t\t\t\tthis.fieldMapImage[i][j].parent = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tstart: function start() {\n\t\t//this.createBlock();\n\t\tthis.createBlockText();\n\t\tthis.schedule(this.blockDownCallback, 1);\n\t},\n\n\t// called every frame\n\t//update: function (dt) {\n\n\t//},\n\n\tblockDownCallback: function blockDownCallback(dt) {\n\t\tthis.pullDownBlock();\n\t},\n\n\tpullDownBlock: function pullDownBlock() {\n\t\tvar isBlocked = false;\n\t\tvar checkedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (this.fieldMapText[i - 1][j] > 1) {\n\t\t\t\t\t\tisBlocked = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcheckedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (isBlocked) {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\tthis.fieldMapText[i - 1][j] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isBlocked) {\n\t\t\tthis.createBlockText();\n\t\t} else {\n\t\t\tthis.drawBlocks();\n\t\t}\n\t},\n\n\tmoveLeft: function moveLeft() {\n\t\tvar isBlocked = false;\n\t\tvar checkedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (this.fieldMapText[i][j - 1] > 1) {\n\t\t\t\t\t\tisBlocked = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcheckedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (!isBlocked) {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\tthis.fieldMapText[i][j - 1] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!isBlocked) {\n\t\t\tthis.drawBlocks();\n\t\t}\n\t},\n\n\tmoveRight: function moveRight() {\n\t\tvar isBlocked = false;\n\t\tvar checkedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = this.fieldMapColumn; j >= 1; j--) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (this.fieldMapText[i][j + 1] > 1) {\n\t\t\t\t\t\tisBlocked = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcheckedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = this.fieldMapColumn; j >= 1; j--) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (!isBlocked) {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\tthis.fieldMapText[i][j + 1] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!isBlocked) {\n\t\t\tthis.drawBlocks();\n\t\t}\n\t}\n\n});\n\ncc._RFpop();","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"Main\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'c3e3fhd2P9Al6wWyp5tYOhi', 'Main');\n// Script\\Main.js\n\n\"use strict\";\n\ncc.Class({\n\textends: cc.Component,\n\n\tproperties: {\n\t\tblockEdgeLength: 60,\n\t\tfieldMapLRMargin: 20,\n\t\tfieldMapTBMargin: 30,\n\t\tblockTypeCount: 7,\n\t\tfieldMapRow: 15,\n\t\tfieldMapColumn: 10,\n\n\t\tfieldMapText: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Object\n\t\t},\n\t\tfieldMapImage: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tBackground: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tArrowR: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowL: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowD: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowRU: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowLU: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tCurrentBlock: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tBlock: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockT: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockI: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockO: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockL: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockRL: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockS: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockRS: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t}\n\t},\n\n\t// use this for initialization\n\tonLoad: function onLoad() {\n\t\tvar thisCanvas = this;\n\n\t\t//테두리 처리를 위해 실제보다 2줄씩 더 크게 배열 생성함\n\t\t//실제 게임이 진행되는 공간은 [1~15][1~10] 이 됨\n\t\tthis.fieldMapText = [];\n\t\tthis.fieldMapImage = [];\n\t\tfor (var i = 0; i < this.fieldMapRow + 2; i++) {\n\t\t\tthis.fieldMapText.push([]);\n\t\t\tthis.fieldMapImage.push([]);\n\t\t\tfor (var j = 0; j < this.fieldMapColumn + 2; j++) {\n\t\t\t\tif (i === 0 || i === this.fieldMapRow + 1) {\n\t\t\t\t\t//제일 윗줄과 제일 아랫줄\n\t\t\t\t\tthis.fieldMapText[i].push(9);\n\t\t\t\t} else if (j === 0 || j === this.fieldMapColumn + 1) {\n\t\t\t\t\t//제일 왼쪽줄과 제일 오른쪽줄\n\t\t\t\t\tthis.fieldMapText[i].push(9);\n\t\t\t\t} else {\n\t\t\t\t\tthis.fieldMapText[i].push(0);\n\t\t\t\t}\n\n\t\t\t\tthis.fieldMapImage.push();\n\t\t\t\tif (i > 0 && i < this.fieldMapRow + 1) {\n\t\t\t\t\tif (j > 0 && j < this.fieldMapColumn + 1) {\n\t\t\t\t\t\tthis.fieldMapImage[i][j] = cc.instantiate(this.Block);\n\t\t\t\t\t\t//this.fieldMapImage[i][j].parent = cc.director.getScene();\n\t\t\t\t\t\t//cc.director.getScene().addChild(this.fieldMapImage);\n\t\t\t\t\t\tthis.fieldMapImage[i][j].setPosition(cc.p((j - 1) * this.blockEdgeLength + this.fieldMapLRMargin, (i - 1) * this.blockEdgeLength + this.fieldMapTBMargin));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.ArrowR.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.moveRight();\n\t\t});\n\t\tthis.ArrowL.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.moveLeft();\n\t\t});\n\t\tthis.ArrowD.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.pullDownBlock();\n\t\t});\n\t\tthis.ArrowRU.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.CurrentBlock.rotation += 90;\n\t\t});\n\t\tthis.ArrowLU.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.CurrentBlock.rotation -= 90;\n\t\t});\n\t},\n\n\tgetBlockStartPosition: function getBlockStartPosition() {\n\t\tif (this.currentblockNum === 1) {\n\t\t\treturn cc.p(this.fieldMapLRMargin + this.blockEdgeLength * (this.fieldMapColumn / 2), this.blockEdgeLength * this.fieldMapRow - this.fieldMapTBMargin);\n\t\t} else {\n\t\t\treturn cc.p(this.fieldMapLRMargin + this.blockEdgeLength * (this.fieldMapColumn / 2), this.blockEdgeLength * (this.fieldMapRow - 1) - this.fieldMapTBMargin);\n\t\t}\n\t},\n\n\tgetBlockNum: function getBlockNum() {\n\t\t//http://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n\t\t//var blockNum = Math.floor(Math.random() * (max - min +1)) + min;\n\t\treturn Math.floor(Math.random() * this.blockTypeCount);\n\t},\n\n\t/*\n createBlock: function() {\n \tvar blockNum = this.getBlockNum();\n \tswitch(blockNum) {\n \t\tcase 0:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockT);\t\t\t\t\t\t\t\t\n \t\t\tbreak;\n \t\tcase 1:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockI);\n \t\t\tbreak;\n \t\tcase 2:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockO);\n \t\t\tbreak;\n \t\tcase 3:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockL);\n \t\t\tbreak;\n \t\tcase 4:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockRL);\n \t\t\tbreak;\n \t\tcase 5:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockS);\n \t\t\tbreak;\n \t\tcase 6:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockRS);\n \t\t\tbreak;\n \t}\n \tthis.CurrentBlock.parent = cc.director.getScene();\n \tthis.CurrentBlock.setPosition(this.getBlockStartPosition(blockNum));\n },\n */\n\n\tcreateBlockText: function createBlockText() {\n\t\tthis.currentblockNum = this.getBlockNum();\n\t\tswitch (this.currentblockNum) {\n\t\t\tcase 0:\n\t\t\t\tthis.fieldMapText[15][5] = 1;\n\t\t\t\tthis.fieldMapText[14][4] = 1;\n\t\t\t\tthis.fieldMapText[14][5] = 1;\n\t\t\t\tthis.fieldMapText[14][6] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis.fieldMapText[15][3] = 1;\n\t\t\t\tthis.fieldMapText[15][4] = 1;\n\t\t\t\tthis.fieldMapText[15][5] = 1;\n\t\t\t\tthis.fieldMapText[15][6] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.fieldMapText[15][5] = 1;\n\t\t\t\tthis.fieldMapText[15][6] = 1;\n\t\t\t\tthis.fieldMapText[14][5] = 1;\n\t\t\t\tthis.fieldMapText[14][6] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.fieldMapText[15][6] = 1;\n\t\t\t\tthis.fieldMapText[14][4] = 1;\n\t\t\t\tthis.fieldMapText[14][5] = 1;\n\t\t\t\tthis.fieldMapText[14][6] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.fieldMapText[15][4] = 1;\n\t\t\t\tthis.fieldMapText[14][4] = 1;\n\t\t\t\tthis.fieldMapText[14][5] = 1;\n\t\t\t\tthis.fieldMapText[14][6] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tthis.fieldMapText[15][5] = 1;\n\t\t\t\tthis.fieldMapText[15][6] = 1;\n\t\t\t\tthis.fieldMapText[14][4] = 1;\n\t\t\t\tthis.fieldMapText[14][5] = 1;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tthis.fieldMapText[15][4] = 1;\n\t\t\t\tthis.fieldMapText[15][5] = 1;\n\t\t\t\tthis.fieldMapText[14][5] = 1;\n\t\t\t\tthis.fieldMapText[14][6] = 1;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.drawBlocks();\n\t\tconsole.log(this.fieldMapText);\n\t},\n\n\tdrawBlocks: function drawBlocks() {\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] > 0) {\n\t\t\t\t\tthis.fieldMapImage[i][j].parent = cc.director.getScene();\n\t\t\t\t} else {\n\t\t\t\t\tthis.fieldMapImage[i][j].parent = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tstart: function start() {\n\t\t//this.createBlock();\n\t\tthis.createBlockText();\n\t\tthis.schedule(this.blockDownCallback, 1);\n\t},\n\n\t// called every frame\n\t//update: function (dt) {\n\n\t//},\n\n\tblockDownCallback: function blockDownCallback(dt) {\n\t\tthis.pullDownBlock();\n\t},\n\n\tpullDownBlock: function pullDownBlock() {\n\t\tvar isBlocked = false;\n\t\tvar checkedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (this.fieldMapText[i - 1][j] > 1) {\n\t\t\t\t\t\tisBlocked = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcheckedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (isBlocked) {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\tthis.fieldMapText[i - 1][j] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isBlocked) {\n\t\t\tthis.createBlockText();\n\t\t} else {\n\t\t\tthis.drawBlocks();\n\t\t}\n\t},\n\n\tmoveLeft: function moveLeft() {\n\t\tvar isBlocked = false;\n\t\tvar checkedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (this.fieldMapText[i][j - 1] > 1) {\n\t\t\t\t\t\tisBlocked = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcheckedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (!isBlocked) {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\tthis.fieldMapText[i][j - 1] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!isBlocked) {\n\t\t\tthis.drawBlocks();\n\t\t}\n\t},\n\n\tmoveRight: function moveRight() {\n\t\tvar isBlocked = false;\n\t\tvar checkedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = this.fieldMapColumn; j >= 1; j--) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (this.fieldMapText[i][j + 1] > 1) {\n\t\t\t\t\t\tisBlocked = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcheckedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = this.fieldMapColumn; j >= 1; j--) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (!isBlocked) {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\tthis.fieldMapText[i][j + 1] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!isBlocked) {\n\t\t\tthis.drawBlocks();\n\t\t}\n\t}\n\n});\n\ncc._RFpop();\n},{}]},{},[\"Main\"])\n\n"],"sourceRoot":"/source/"}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
{"version":3,"sources":["resources/app.asar/node_modules/browser-pack/_prelude.js","Script/Main.js","project.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","Main","module","cc","_RFpush","Class","extends","Component","properties","blockEdgeLength","fieldMapLRMargin","fieldMapTBMargin","blockTypeCount","fieldMapRow","fieldMapColumn","fieldMapText","default","type","Object","fieldMapImage","Node","Background","ArrowR","ArrowL","ArrowD","ArrowRU","ArrowLU","CurrentBlock","Block","Prefab","BlockT","BlockI","BlockO","BlockL","BlockRL","BlockS","BlockRS","ScoreValue","Label","onLoad","thisCanvas","this","push","j","instantiate","setPosition","p","opacity","on","EventType","TOUCH_START","event","moveRight","moveLeft","pullDownBlock","unschedule","blockDownCallback","schedule","TOUCH_END","TOUCH_CANCEL","rotateBlock","getBlockStartPosition","currentBlockNum","getBlockNum","Math","floor","random","createBlockText","currentBlockCenterIdx","currentBlockRotationMax","currentBlockRotationNum","drawBlocks","parent","director","getScene","start","checkFullLine","countBlock","deletedRow","deltaRow","string","Number","dt","isBlocked","checkedBlockCount","direction","_RFpop"],"mappings":"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","file":"project.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\ncc._RFpush(module, 'c3e3fhd2P9Al6wWyp5tYOhi', 'Main');\n// Script\\Main.js\n\n'use strict';\n\ncc.Class({\n\textends: cc.Component,\n\n\tproperties: {\n\t\tblockEdgeLength: 60,\n\t\tfieldMapLRMargin: 20,\n\t\tfieldMapTBMargin: 40,\n\t\tblockTypeCount: 7,\n\t\tfieldMapRow: 20,\n\t\tfieldMapColumn: 10,\n\n\t\tfieldMapText: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Object\n\t\t},\n\t\tfieldMapImage: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tBackground: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tArrowR: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowL: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowD: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowRU: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowLU: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tCurrentBlock: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tBlock: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockT: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockI: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockO: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockL: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockRL: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockS: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockRS: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\n\t\tScoreValue: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Label\n\t\t}\n\t},\n\n\t// use this for initialization\n\tonLoad: function onLoad() {\n\t\tvar thisCanvas = this;\n\n\t\t//테두리 처리를 위해 실제보다 2줄씩 더 크게 배열 생성함\n\t\t//실제 게임이 진행되는 공간은 [1~this.fieldMapRow][1~this.fieldMapColumn] 이 됨\n\t\tthis.fieldMapText = [];\n\t\tthis.fieldMapImage = [];\n\t\tfor (var i = 0; i < this.fieldMapRow + 2; i++) {\n\t\t\tthis.fieldMapText.push([]);\n\t\t\tthis.fieldMapImage.push([]);\n\t\t\tfor (var j = 0; j < this.fieldMapColumn + 2; j++) {\n\t\t\t\tif (i === 0 || i === this.fieldMapRow + 1) {\n\t\t\t\t\t//제일 윗줄과 제일 아랫줄\n\t\t\t\t\tthis.fieldMapText[i].push(9);\n\t\t\t\t} else if (j === 0 || j === this.fieldMapColumn + 1) {\n\t\t\t\t\t//제일 왼쪽줄과 제일 오른쪽줄\n\t\t\t\t\tthis.fieldMapText[i].push(9);\n\t\t\t\t} else {\n\t\t\t\t\tthis.fieldMapText[i].push(0);\n\t\t\t\t}\n\n\t\t\t\tthis.fieldMapImage.push();\n\t\t\t\tif (i > 0 && i < this.fieldMapRow + 1) {\n\t\t\t\t\tif (j > 0 && j < this.fieldMapColumn + 1) {\n\t\t\t\t\t\tthis.fieldMapImage[i][j] = cc.instantiate(this.Block);\n\t\t\t\t\t\t//this.fieldMapImage[i][j].parent = cc.director.getScene();\n\t\t\t\t\t\t//cc.director.getScene().addChild(this.fieldMapImage);\n\t\t\t\t\t\tthis.fieldMapImage[i][j].setPosition(cc.p((j - 1) * this.blockEdgeLength + this.fieldMapLRMargin, (i - 1) * this.blockEdgeLength + this.fieldMapTBMargin));\n\t\t\t\t\t\tthis.fieldMapImage[i][j].opacity = 200;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.ArrowR.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.moveRight();\n\t\t});\n\t\tthis.ArrowL.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.moveLeft();\n\t\t});\n\t\tthis.ArrowD.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.pullDownBlock();\n\t\t\tthisCanvas.unschedule(thisCanvas.blockDownCallback);\n\t\t\tthisCanvas.schedule(thisCanvas.blockDownCallback, 0.09);\n\t\t});\n\t\tthis.ArrowD.on(cc.Node.EventType.TOUCH_END, function (event) {\n\t\t\tthisCanvas.unschedule(thisCanvas.blockDownCallback);\n\t\t\tthisCanvas.schedule(thisCanvas.blockDownCallback, 1);\n\t\t});\n\t\tthis.ArrowD.on(cc.Node.EventType.TOUCH_CANCEL, function (event) {\n\t\t\tthisCanvas.unschedule(thisCanvas.blockDownCallback);\n\t\t\tthisCanvas.schedule(thisCanvas.blockDownCallback, 1);\n\t\t});\n\t\tthis.ArrowRU.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.rotateBlock('R');\n\t\t});\n\t\tthis.ArrowLU.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.rotateBlock('R');\n\t\t});\n\t},\n\n\tgetBlockStartPosition: function getBlockStartPosition() {\n\t\tif (this.currentBlockNum === 1) {\n\t\t\treturn cc.p(this.fieldMapLRMargin + this.blockEdgeLength * (this.fieldMapColumn / 2), this.blockEdgeLength * this.fieldMapRow - this.fieldMapTBMargin);\n\t\t} else {\n\t\t\treturn cc.p(this.fieldMapLRMargin + this.blockEdgeLength * (this.fieldMapColumn / 2), this.blockEdgeLength * (this.fieldMapRow - 1) - this.fieldMapTBMargin);\n\t\t}\n\t},\n\n\tgetBlockNum: function getBlockNum() {\n\t\t//http://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n\t\t//var blockNum = Math.floor(Math.random() * (max - min +1)) + min;\n\t\treturn Math.floor(Math.random() * this.blockTypeCount) + 2;\n\t},\n\n\t/*\n createBlock: function() {\n \tvar blockNum = this.getBlockNum();\n \tswitch(blockNum) {\n \t\tcase 0:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockT);\t\t\t\t\t\t\t\t\n \t\t\tbreak;\n \t\tcase 1:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockI);\n \t\t\tbreak;\n \t\tcase 2:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockO);\n \t\t\tbreak;\n \t\tcase 3:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockL);\n \t\t\tbreak;\n \t\tcase 4:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockRL);\n \t\t\tbreak;\n \t\tcase 5:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockS);\n \t\t\tbreak;\n \t\tcase 6:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockRS);\n \t\t\tbreak;\n \t}\n \tthis.CurrentBlock.parent = cc.director.getScene();\n \tthis.CurrentBlock.setPosition(this.getBlockStartPosition(blockNum));\n },\n */\n\n\tcreateBlockText: function createBlockText() {\n\t\tthis.currentBlockNum = this.getBlockNum();\n\t\tswitch (this.currentBlockNum) {\n\t\t\tcase 2:\n\t\t\t\t//T\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow - 1, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 4;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t//I\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) + 2] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 2;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\t//O\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 1;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\t//L\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 4;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\t//RL\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 4;\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\t//S\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow - 1, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 2;\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\t//RS\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow - 1, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 2;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.currentBlockRotationNum = 1;\n\n\t\tthis.drawBlocks();\n\t\t//console.log(this.fieldMapText);\n\t},\n\n\tdrawBlocks: function drawBlocks() {\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] > 0) {\n\t\t\t\t\tthis.fieldMapImage[i][j].parent = cc.director.getScene();\n\t\t\t\t} else {\n\t\t\t\t\tthis.fieldMapImage[i][j].parent = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tstart: function start() {\n\t\t//this.createBlock();\n\t\tthis.createBlockText();\n\t\tthis.schedule(this.blockDownCallback, 1);\n\t},\n\n\t// called every frame\n\t//update: function (dt) {\n\n\t//},\n\tcheckFullLine: function checkFullLine() {\n\t\tvar countBlock;\n\t\tvar deletedRow = [null];\n\t\tvar deltaRow = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tcountBlock = 0;\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] > 1) {\n\t\t\t\t\tcountBlock++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (countBlock === this.fieldMapColumn) {\n\t\t\t\tdeletedRow.push(true);\n\t\t\t\tthis.ScoreValue.string = Number(this.ScoreValue.string + 1);\n\t\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdeletedRow.push(false);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tif (deletedRow[i]) {\n\t\t\t\tdeltaRow++;\n\t\t\t\tcontinue;\n\t\t\t} else if (deltaRow !== 0) {\n\t\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\t\tthis.fieldMapText[i - deltaRow][j] = this.fieldMapText[i][j];\n\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tblockDownCallback: function blockDownCallback(dt) {\n\t\tthis.pullDownBlock();\n\t},\n\n\tpullDownBlock: function pullDownBlock() {\n\t\tvar isBlocked = false;\n\t\tvar checkedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (this.fieldMapText[i - 1][j] > 1) {\n\t\t\t\t\t\tisBlocked = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcheckedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (isBlocked) {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = this.currentBlockNum;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\tthis.fieldMapText[i - 1][j] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isBlocked) {\n\t\t\tthis.checkFullLine();\n\t\t\tthis.createBlockText();\n\t\t} else {\n\t\t\tthis.currentBlockCenterIdx[0]--;\n\t\t\tthis.drawBlocks();\n\t\t}\n\t},\n\n\tmoveLeft: function moveLeft() {\n\t\tvar isBlocked = false;\n\t\tvar checkedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (this.fieldMapText[i][j - 1] > 1) {\n\t\t\t\t\t\tisBlocked = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcheckedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (!isBlocked) {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\tthis.fieldMapText[i][j - 1] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!isBlocked) {\n\t\t\tthis.currentBlockCenterIdx[1]--;\n\t\t\tthis.drawBlocks();\n\t\t}\n\t},\n\n\tmoveRight: function moveRight() {\n\t\tvar isBlocked = false;\n\t\tvar checkedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = this.fieldMapColumn; j >= 1; j--) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (this.fieldMapText[i][j + 1] > 1) {\n\t\t\t\t\t\tisBlocked = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcheckedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = this.fieldMapColumn; j >= 1; j--) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (!isBlocked) {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\tthis.fieldMapText[i][j + 1] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!isBlocked) {\n\t\t\tthis.currentBlockCenterIdx[1]++;\n\t\t\tthis.drawBlocks();\n\t\t}\n\t},\n\n\trotateBlock: function rotateBlock(direction) {\n\t\tif (direction === 'L') {\n\t\t\tif (this.currentBlockRotationNum > 1) {\n\t\t\t\tthis.currentBlockRotationNum--;\n\t\t\t} else {\n\t\t\t\tthis.currentBlockRotationNum = this.currentBlockRotationMax;\n\t\t\t}\n\t\t} else if (direction === 'R') {\n\t\t\tif (this.currentBlockRotationNum < this.currentBlockRotationMax) {\n\t\t\t\tthis.currentBlockRotationNum++;\n\t\t\t} else {\n\t\t\t\tthis.currentBlockRotationNum = 1;\n\t\t\t}\n\t\t}\n\n\t\tswitch (this.currentBlockNum) {\n\t\t\tcase 2:\n\t\t\t\t//T\n\t\t\t\tfor (var i = this.currentBlockCenterIdx[0] - 1; i <= this.currentBlockCenterIdx[0] + 1; i++) {\n\t\t\t\t\tfor (var j = this.currentBlockCenterIdx[1] - 1; j <= this.currentBlockCenterIdx[1] + 1; j++) {\n\t\t\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.currentBlockRotationNum === 1) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 2) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 3) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 4) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t//I\n\t\t\t\tfor (var i = this.currentBlockCenterIdx[0] - 2; i <= this.currentBlockCenterIdx[0] + 1; i++) {\n\t\t\t\t\tfor (var j = this.currentBlockCenterIdx[1] - 1; j <= this.currentBlockCenterIdx[1] + 2; j++) {\n\t\t\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.currentBlockRotationNum === 1) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 2] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 2) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 2][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\t//O\n\t\t\t\treturn;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\t//L\n\t\t\t\tfor (var i = this.currentBlockCenterIdx[0] - 2; i <= this.currentBlockCenterIdx[0] + 1; i++) {\n\t\t\t\t\tfor (var j = this.currentBlockCenterIdx[1] - 1; j <= this.currentBlockCenterIdx[1] + 2; j++) {\n\t\t\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.currentBlockRotationNum === 1) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 2) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 3) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 2] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 4) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 2][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\t//RL\n\t\t\t\tfor (var i = this.currentBlockCenterIdx[0] - 2; i <= this.currentBlockCenterIdx[0] + 1; i++) {\n\t\t\t\t\tfor (var j = this.currentBlockCenterIdx[1] - 2; j <= this.currentBlockCenterIdx[1] + 1; j++) {\n\t\t\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.currentBlockRotationNum === 1) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 2) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 2][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 3) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 2] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 4) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\t//S\n\t\t\t\tfor (var i = this.currentBlockCenterIdx[0] - 1; i <= this.currentBlockCenterIdx[0] + 2; i++) {\n\t\t\t\t\tfor (var j = this.currentBlockCenterIdx[1] - 1; j <= this.currentBlockCenterIdx[1] + 2; j++) {\n\t\t\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.currentBlockRotationNum === 1) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 2) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\t//RS\n\t\t\t\tfor (var i = this.currentBlockCenterIdx[0] - 1; i <= this.currentBlockCenterIdx[0] + 2; i++) {\n\t\t\t\t\tfor (var j = this.currentBlockCenterIdx[1] - 1; j <= this.currentBlockCenterIdx[1] + 2; j++) {\n\t\t\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.currentBlockRotationNum === 1) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 2) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.drawBlocks();\n\t}\n});\n\ncc._RFpop();","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"Main\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'c3e3fhd2P9Al6wWyp5tYOhi', 'Main');\n// Script\\Main.js\n\n'use strict';\n\ncc.Class({\n\textends: cc.Component,\n\n\tproperties: {\n\t\tblockEdgeLength: 60,\n\t\tfieldMapLRMargin: 20,\n\t\tfieldMapTBMargin: 40,\n\t\tblockTypeCount: 7,\n\t\tfieldMapRow: 20,\n\t\tfieldMapColumn: 10,\n\n\t\tfieldMapText: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Object\n\t\t},\n\t\tfieldMapImage: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tBackground: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tArrowR: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowL: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowD: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowRU: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\t\tArrowLU: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tCurrentBlock: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Node\n\t\t},\n\n\t\tBlock: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockT: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockI: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockO: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockL: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockRL: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockS: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\t\tBlockRS: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Prefab\n\t\t},\n\n\t\tScoreValue: {\n\t\t\tdefault: null,\n\t\t\ttype: cc.Label\n\t\t}\n\t},\n\n\t// use this for initialization\n\tonLoad: function onLoad() {\n\t\tvar thisCanvas = this;\n\n\t\t//테두리 처리를 위해 실제보다 2줄씩 더 크게 배열 생성함\n\t\t//실제 게임이 진행되는 공간은 [1~this.fieldMapRow][1~this.fieldMapColumn] 이 됨\n\t\tthis.fieldMapText = [];\n\t\tthis.fieldMapImage = [];\n\t\tfor (var i = 0; i < this.fieldMapRow + 2; i++) {\n\t\t\tthis.fieldMapText.push([]);\n\t\t\tthis.fieldMapImage.push([]);\n\t\t\tfor (var j = 0; j < this.fieldMapColumn + 2; j++) {\n\t\t\t\tif (i === 0 || i === this.fieldMapRow + 1) {\n\t\t\t\t\t//제일 윗줄과 제일 아랫줄\n\t\t\t\t\tthis.fieldMapText[i].push(9);\n\t\t\t\t} else if (j === 0 || j === this.fieldMapColumn + 1) {\n\t\t\t\t\t//제일 왼쪽줄과 제일 오른쪽줄\n\t\t\t\t\tthis.fieldMapText[i].push(9);\n\t\t\t\t} else {\n\t\t\t\t\tthis.fieldMapText[i].push(0);\n\t\t\t\t}\n\n\t\t\t\tthis.fieldMapImage.push();\n\t\t\t\tif (i > 0 && i < this.fieldMapRow + 1) {\n\t\t\t\t\tif (j > 0 && j < this.fieldMapColumn + 1) {\n\t\t\t\t\t\tthis.fieldMapImage[i][j] = cc.instantiate(this.Block);\n\t\t\t\t\t\t//this.fieldMapImage[i][j].parent = cc.director.getScene();\n\t\t\t\t\t\t//cc.director.getScene().addChild(this.fieldMapImage);\n\t\t\t\t\t\tthis.fieldMapImage[i][j].setPosition(cc.p((j - 1) * this.blockEdgeLength + this.fieldMapLRMargin, (i - 1) * this.blockEdgeLength + this.fieldMapTBMargin));\n\t\t\t\t\t\tthis.fieldMapImage[i][j].opacity = 200;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.ArrowR.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.moveRight();\n\t\t});\n\t\tthis.ArrowL.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.moveLeft();\n\t\t});\n\t\tthis.ArrowD.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.pullDownBlock();\n\t\t\tthisCanvas.unschedule(thisCanvas.blockDownCallback);\n\t\t\tthisCanvas.schedule(thisCanvas.blockDownCallback, 0.09);\n\t\t});\n\t\tthis.ArrowD.on(cc.Node.EventType.TOUCH_END, function (event) {\n\t\t\tthisCanvas.unschedule(thisCanvas.blockDownCallback);\n\t\t\tthisCanvas.schedule(thisCanvas.blockDownCallback, 1);\n\t\t});\n\t\tthis.ArrowD.on(cc.Node.EventType.TOUCH_CANCEL, function (event) {\n\t\t\tthisCanvas.unschedule(thisCanvas.blockDownCallback);\n\t\t\tthisCanvas.schedule(thisCanvas.blockDownCallback, 1);\n\t\t});\n\t\tthis.ArrowRU.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.rotateBlock('R');\n\t\t});\n\t\tthis.ArrowLU.on(cc.Node.EventType.TOUCH_START, function (event) {\n\t\t\tthisCanvas.rotateBlock('R');\n\t\t});\n\t},\n\n\tgetBlockStartPosition: function getBlockStartPosition() {\n\t\tif (this.currentBlockNum === 1) {\n\t\t\treturn cc.p(this.fieldMapLRMargin + this.blockEdgeLength * (this.fieldMapColumn / 2), this.blockEdgeLength * this.fieldMapRow - this.fieldMapTBMargin);\n\t\t} else {\n\t\t\treturn cc.p(this.fieldMapLRMargin + this.blockEdgeLength * (this.fieldMapColumn / 2), this.blockEdgeLength * (this.fieldMapRow - 1) - this.fieldMapTBMargin);\n\t\t}\n\t},\n\n\tgetBlockNum: function getBlockNum() {\n\t\t//http://stackoverflow.com/questions/1527803/generating-random-whole-numbers-in-javascript-in-a-specific-range\n\t\t//var blockNum = Math.floor(Math.random() * (max - min +1)) + min;\n\t\treturn Math.floor(Math.random() * this.blockTypeCount) + 2;\n\t},\n\n\t/*\n createBlock: function() {\n \tvar blockNum = this.getBlockNum();\n \tswitch(blockNum) {\n \t\tcase 0:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockT);\t\t\t\t\t\t\t\t\n \t\t\tbreak;\n \t\tcase 1:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockI);\n \t\t\tbreak;\n \t\tcase 2:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockO);\n \t\t\tbreak;\n \t\tcase 3:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockL);\n \t\t\tbreak;\n \t\tcase 4:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockRL);\n \t\t\tbreak;\n \t\tcase 5:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockS);\n \t\t\tbreak;\n \t\tcase 6:\n \t\t\tthis.CurrentBlock = cc.instantiate(this.BlockRS);\n \t\t\tbreak;\n \t}\n \tthis.CurrentBlock.parent = cc.director.getScene();\n \tthis.CurrentBlock.setPosition(this.getBlockStartPosition(blockNum));\n },\n */\n\n\tcreateBlockText: function createBlockText() {\n\t\tthis.currentBlockNum = this.getBlockNum();\n\t\tswitch (this.currentBlockNum) {\n\t\t\tcase 2:\n\t\t\t\t//T\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow - 1, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 4;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t//I\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) + 2] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 2;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\t//O\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 1;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\t//L\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 4;\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\t//RL\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 4;\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\t//S\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow - 1, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 2;\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\t//RS\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2) - 1] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2)] = 1;\n\t\t\t\tthis.fieldMapText[this.fieldMapRow - 1][Math.floor(this.fieldMapColumn / 2) + 1] = 1;\n\t\t\t\tthis.currentBlockCenterIdx = [this.fieldMapRow - 1, Math.floor(this.fieldMapColumn / 2)];\n\t\t\t\tthis.currentBlockRotationMax = 2;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.currentBlockRotationNum = 1;\n\n\t\tthis.drawBlocks();\n\t\t//console.log(this.fieldMapText);\n\t},\n\n\tdrawBlocks: function drawBlocks() {\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] > 0) {\n\t\t\t\t\tthis.fieldMapImage[i][j].parent = cc.director.getScene();\n\t\t\t\t} else {\n\t\t\t\t\tthis.fieldMapImage[i][j].parent = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tstart: function start() {\n\t\t//this.createBlock();\n\t\tthis.createBlockText();\n\t\tthis.schedule(this.blockDownCallback, 1);\n\t},\n\n\t// called every frame\n\t//update: function (dt) {\n\n\t//},\n\tcheckFullLine: function checkFullLine() {\n\t\tvar countBlock;\n\t\tvar deletedRow = [null];\n\t\tvar deltaRow = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tcountBlock = 0;\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] > 1) {\n\t\t\t\t\tcountBlock++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (countBlock === this.fieldMapColumn) {\n\t\t\t\tdeletedRow.push(true);\n\t\t\t\tthis.ScoreValue.string = Number(this.ScoreValue.string + 1);\n\t\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdeletedRow.push(false);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tif (deletedRow[i]) {\n\t\t\t\tdeltaRow++;\n\t\t\t\tcontinue;\n\t\t\t} else if (deltaRow !== 0) {\n\t\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\t\tthis.fieldMapText[i - deltaRow][j] = this.fieldMapText[i][j];\n\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tblockDownCallback: function blockDownCallback(dt) {\n\t\tthis.pullDownBlock();\n\t},\n\n\tpullDownBlock: function pullDownBlock() {\n\t\tvar isBlocked = false;\n\t\tvar checkedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (this.fieldMapText[i - 1][j] > 1) {\n\t\t\t\t\t\tisBlocked = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcheckedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (isBlocked) {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = this.currentBlockNum;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\tthis.fieldMapText[i - 1][j] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (isBlocked) {\n\t\t\tthis.checkFullLine();\n\t\t\tthis.createBlockText();\n\t\t} else {\n\t\t\tthis.currentBlockCenterIdx[0]--;\n\t\t\tthis.drawBlocks();\n\t\t}\n\t},\n\n\tmoveLeft: function moveLeft() {\n\t\tvar isBlocked = false;\n\t\tvar checkedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (this.fieldMapText[i][j - 1] > 1) {\n\t\t\t\t\t\tisBlocked = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcheckedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = 1; j <= this.fieldMapColumn; j++) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (!isBlocked) {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\tthis.fieldMapText[i][j - 1] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!isBlocked) {\n\t\t\tthis.currentBlockCenterIdx[1]--;\n\t\t\tthis.drawBlocks();\n\t\t}\n\t},\n\n\tmoveRight: function moveRight() {\n\t\tvar isBlocked = false;\n\t\tvar checkedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = this.fieldMapColumn; j >= 1; j--) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (this.fieldMapText[i][j + 1] > 1) {\n\t\t\t\t\t\tisBlocked = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tcheckedBlockCount = 0;\n\t\tfor (var i = 1; i <= this.fieldMapRow; i++) {\n\t\t\tfor (var j = this.fieldMapColumn; j >= 1; j--) {\n\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\tcheckedBlockCount++;\n\t\t\t\t\tif (!isBlocked) {\n\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\tthis.fieldMapText[i][j + 1] = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (checkedBlockCount === 4) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!isBlocked) {\n\t\t\tthis.currentBlockCenterIdx[1]++;\n\t\t\tthis.drawBlocks();\n\t\t}\n\t},\n\n\trotateBlock: function rotateBlock(direction) {\n\t\tif (direction === 'L') {\n\t\t\tif (this.currentBlockRotationNum > 1) {\n\t\t\t\tthis.currentBlockRotationNum--;\n\t\t\t} else {\n\t\t\t\tthis.currentBlockRotationNum = this.currentBlockRotationMax;\n\t\t\t}\n\t\t} else if (direction === 'R') {\n\t\t\tif (this.currentBlockRotationNum < this.currentBlockRotationMax) {\n\t\t\t\tthis.currentBlockRotationNum++;\n\t\t\t} else {\n\t\t\t\tthis.currentBlockRotationNum = 1;\n\t\t\t}\n\t\t}\n\n\t\tswitch (this.currentBlockNum) {\n\t\t\tcase 2:\n\t\t\t\t//T\n\t\t\t\tfor (var i = this.currentBlockCenterIdx[0] - 1; i <= this.currentBlockCenterIdx[0] + 1; i++) {\n\t\t\t\t\tfor (var j = this.currentBlockCenterIdx[1] - 1; j <= this.currentBlockCenterIdx[1] + 1; j++) {\n\t\t\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.currentBlockRotationNum === 1) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 2) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 3) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 4) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\t//I\n\t\t\t\tfor (var i = this.currentBlockCenterIdx[0] - 2; i <= this.currentBlockCenterIdx[0] + 1; i++) {\n\t\t\t\t\tfor (var j = this.currentBlockCenterIdx[1] - 1; j <= this.currentBlockCenterIdx[1] + 2; j++) {\n\t\t\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.currentBlockRotationNum === 1) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 2] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 2) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 2][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\t//O\n\t\t\t\treturn;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\t//L\n\t\t\t\tfor (var i = this.currentBlockCenterIdx[0] - 2; i <= this.currentBlockCenterIdx[0] + 1; i++) {\n\t\t\t\t\tfor (var j = this.currentBlockCenterIdx[1] - 1; j <= this.currentBlockCenterIdx[1] + 2; j++) {\n\t\t\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.currentBlockRotationNum === 1) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 2) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 3) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 2] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 4) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 2][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\t//RL\n\t\t\t\tfor (var i = this.currentBlockCenterIdx[0] - 2; i <= this.currentBlockCenterIdx[0] + 1; i++) {\n\t\t\t\t\tfor (var j = this.currentBlockCenterIdx[1] - 2; j <= this.currentBlockCenterIdx[1] + 1; j++) {\n\t\t\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.currentBlockRotationNum === 1) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 2) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 2][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 3) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 2] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 4) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\t//S\n\t\t\t\tfor (var i = this.currentBlockCenterIdx[0] - 1; i <= this.currentBlockCenterIdx[0] + 2; i++) {\n\t\t\t\t\tfor (var j = this.currentBlockCenterIdx[1] - 1; j <= this.currentBlockCenterIdx[1] + 2; j++) {\n\t\t\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.currentBlockRotationNum === 1) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 2) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\t//RS\n\t\t\t\tfor (var i = this.currentBlockCenterIdx[0] - 1; i <= this.currentBlockCenterIdx[0] + 2; i++) {\n\t\t\t\t\tfor (var j = this.currentBlockCenterIdx[1] - 1; j <= this.currentBlockCenterIdx[1] + 2; j++) {\n\t\t\t\t\t\tif (this.fieldMapText[i][j] === 1) {\n\t\t\t\t\t\t\tthis.fieldMapText[i][j] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.currentBlockRotationNum === 1) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1] - 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t} else if (this.currentBlockRotationNum === 2) {\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] - 1][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1]] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0]][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t\tthis.fieldMapText[this.currentBlockCenterIdx[0] + 1][this.currentBlockCenterIdx[1] + 1] = 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.drawBlocks();\n\t}\n});\n\ncc._RFpop();\n},{}]},{},[\"Main\"])\n\n"],"sourceRoot":"/source/"}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=